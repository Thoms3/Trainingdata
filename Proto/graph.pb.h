// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_graph_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_graph_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_graph_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_graph_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_graph_2eproto;
namespace instance {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class Data_Graph;
class Data_GraphDefaultTypeInternal;
extern Data_GraphDefaultTypeInternal _Data_Graph_default_instance_;
class Data_Graph_Node;
class Data_Graph_NodeDefaultTypeInternal;
extern Data_Graph_NodeDefaultTypeInternal _Data_Graph_Node_default_instance_;
}  // namespace instance
PROTOBUF_NAMESPACE_OPEN
template<> ::instance::Data* Arena::CreateMaybeMessage<::instance::Data>(Arena*);
template<> ::instance::Data_Graph* Arena::CreateMaybeMessage<::instance::Data_Graph>(Arena*);
template<> ::instance::Data_Graph_Node* Arena::CreateMaybeMessage<::instance::Data_Graph_Node>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace instance {

// ===================================================================

class Data_Graph_Node :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:instance.Data.Graph.Node) */ {
 public:
  Data_Graph_Node();
  virtual ~Data_Graph_Node();

  Data_Graph_Node(const Data_Graph_Node& from);
  Data_Graph_Node(Data_Graph_Node&& from) noexcept
    : Data_Graph_Node() {
    *this = ::std::move(from);
  }

  inline Data_Graph_Node& operator=(const Data_Graph_Node& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data_Graph_Node& operator=(Data_Graph_Node&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Data_Graph_Node& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data_Graph_Node* internal_default_instance() {
    return reinterpret_cast<const Data_Graph_Node*>(
               &_Data_Graph_Node_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Data_Graph_Node& a, Data_Graph_Node& b) {
    a.Swap(&b);
  }
  inline void Swap(Data_Graph_Node* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Data_Graph_Node* New() const final {
    return CreateMaybeMessage<Data_Graph_Node>(nullptr);
  }

  Data_Graph_Node* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Data_Graph_Node>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Data_Graph_Node& from);
  void MergeFrom(const Data_Graph_Node& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data_Graph_Node* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "instance.Data.Graph.Node";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_graph_2eproto);
    return ::descriptor_table_graph_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectedtoFieldNumber = 2,
  };
  // repeated int32 connectedto = 2;
  int connectedto_size() const;
  private:
  int _internal_connectedto_size() const;
  public:
  void clear_connectedto();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_connectedto(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_connectedto() const;
  void _internal_add_connectedto(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_connectedto();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 connectedto(int index) const;
  void set_connectedto(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_connectedto(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      connectedto() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_connectedto();

  // @@protoc_insertion_point(class_scope:instance.Data.Graph.Node)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > connectedto_;
  friend struct ::TableStruct_graph_2eproto;
};
// -------------------------------------------------------------------

class Data_Graph :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:instance.Data.Graph) */ {
 public:
  Data_Graph();
  virtual ~Data_Graph();

  Data_Graph(const Data_Graph& from);
  Data_Graph(Data_Graph&& from) noexcept
    : Data_Graph() {
    *this = ::std::move(from);
  }

  inline Data_Graph& operator=(const Data_Graph& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data_Graph& operator=(Data_Graph&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Data_Graph& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data_Graph* internal_default_instance() {
    return reinterpret_cast<const Data_Graph*>(
               &_Data_Graph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Data_Graph& a, Data_Graph& b) {
    a.Swap(&b);
  }
  inline void Swap(Data_Graph* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Data_Graph* New() const final {
    return CreateMaybeMessage<Data_Graph>(nullptr);
  }

  Data_Graph* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Data_Graph>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Data_Graph& from);
  void MergeFrom(const Data_Graph& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data_Graph* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "instance.Data.Graph";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_graph_2eproto);
    return ::descriptor_table_graph_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Data_Graph_Node Node;

  // accessors -------------------------------------------------------

  enum : int {
    kNodesFieldNumber = 3,
    kScoreFieldNumber = 4,
    kRightFieldNumber = 1,
  };
  // repeated .instance.Data.Graph.Node nodes = 3;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;
  public:
  void clear_nodes();
  ::instance::Data_Graph_Node* mutable_nodes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph_Node >*
      mutable_nodes();
  private:
  const ::instance::Data_Graph_Node& _internal_nodes(int index) const;
  ::instance::Data_Graph_Node* _internal_add_nodes();
  public:
  const ::instance::Data_Graph_Node& nodes(int index) const;
  ::instance::Data_Graph_Node* add_nodes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph_Node >&
      nodes() const;

  // repeated int32 score = 4;
  int score_size() const;
  private:
  int _internal_score_size() const;
  public:
  void clear_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_score() const;
  void _internal_add_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 score(int index) const;
  void set_score(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_score(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_score();

  // required int32 right = 1;
  bool has_right() const;
  private:
  bool _internal_has_right() const;
  public:
  void clear_right();
  ::PROTOBUF_NAMESPACE_ID::int32 right() const;
  void set_right(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right() const;
  void _internal_set_right(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:instance.Data.Graph)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph_Node > nodes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > score_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_;
  friend struct ::TableStruct_graph_2eproto;
};
// -------------------------------------------------------------------

class Data :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:instance.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }
  inline void Swap(Data* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const final {
    return CreateMaybeMessage<Data>(nullptr);
  }

  Data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "instance.Data";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_graph_2eproto);
    return ::descriptor_table_graph_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Data_Graph Graph;

  // accessors -------------------------------------------------------

  enum : int {
    kGraphFieldNumber = 5,
  };
  // repeated .instance.Data.Graph graph = 5;
  int graph_size() const;
  private:
  int _internal_graph_size() const;
  public:
  void clear_graph();
  ::instance::Data_Graph* mutable_graph(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph >*
      mutable_graph();
  private:
  const ::instance::Data_Graph& _internal_graph(int index) const;
  ::instance::Data_Graph* _internal_add_graph();
  public:
  const ::instance::Data_Graph& graph(int index) const;
  ::instance::Data_Graph* add_graph();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph >&
      graph() const;

  // @@protoc_insertion_point(class_scope:instance.Data)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph > graph_;
  friend struct ::TableStruct_graph_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Data_Graph_Node

// repeated int32 connectedto = 2;
inline int Data_Graph_Node::_internal_connectedto_size() const {
  return connectedto_.size();
}
inline int Data_Graph_Node::connectedto_size() const {
  return _internal_connectedto_size();
}
inline void Data_Graph_Node::clear_connectedto() {
  connectedto_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Data_Graph_Node::_internal_connectedto(int index) const {
  return connectedto_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Data_Graph_Node::connectedto(int index) const {
  // @@protoc_insertion_point(field_get:instance.Data.Graph.Node.connectedto)
  return _internal_connectedto(index);
}
inline void Data_Graph_Node::set_connectedto(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  connectedto_.Set(index, value);
  // @@protoc_insertion_point(field_set:instance.Data.Graph.Node.connectedto)
}
inline void Data_Graph_Node::_internal_add_connectedto(::PROTOBUF_NAMESPACE_ID::int32 value) {
  connectedto_.Add(value);
}
inline void Data_Graph_Node::add_connectedto(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_connectedto(value);
  // @@protoc_insertion_point(field_add:instance.Data.Graph.Node.connectedto)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Data_Graph_Node::_internal_connectedto() const {
  return connectedto_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Data_Graph_Node::connectedto() const {
  // @@protoc_insertion_point(field_list:instance.Data.Graph.Node.connectedto)
  return _internal_connectedto();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Data_Graph_Node::_internal_mutable_connectedto() {
  return &connectedto_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Data_Graph_Node::mutable_connectedto() {
  // @@protoc_insertion_point(field_mutable_list:instance.Data.Graph.Node.connectedto)
  return _internal_mutable_connectedto();
}

// -------------------------------------------------------------------

// Data_Graph

// required int32 right = 1;
inline bool Data_Graph::_internal_has_right() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Data_Graph::has_right() const {
  return _internal_has_right();
}
inline void Data_Graph::clear_right() {
  right_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Data_Graph::_internal_right() const {
  return right_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Data_Graph::right() const {
  // @@protoc_insertion_point(field_get:instance.Data.Graph.right)
  return _internal_right();
}
inline void Data_Graph::_internal_set_right(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  right_ = value;
}
inline void Data_Graph::set_right(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right(value);
  // @@protoc_insertion_point(field_set:instance.Data.Graph.right)
}

// repeated .instance.Data.Graph.Node nodes = 3;
inline int Data_Graph::_internal_nodes_size() const {
  return nodes_.size();
}
inline int Data_Graph::nodes_size() const {
  return _internal_nodes_size();
}
inline void Data_Graph::clear_nodes() {
  nodes_.Clear();
}
inline ::instance::Data_Graph_Node* Data_Graph::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:instance.Data.Graph.nodes)
  return nodes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph_Node >*
Data_Graph::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:instance.Data.Graph.nodes)
  return &nodes_;
}
inline const ::instance::Data_Graph_Node& Data_Graph::_internal_nodes(int index) const {
  return nodes_.Get(index);
}
inline const ::instance::Data_Graph_Node& Data_Graph::nodes(int index) const {
  // @@protoc_insertion_point(field_get:instance.Data.Graph.nodes)
  return _internal_nodes(index);
}
inline ::instance::Data_Graph_Node* Data_Graph::_internal_add_nodes() {
  return nodes_.Add();
}
inline ::instance::Data_Graph_Node* Data_Graph::add_nodes() {
  // @@protoc_insertion_point(field_add:instance.Data.Graph.nodes)
  return _internal_add_nodes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph_Node >&
Data_Graph::nodes() const {
  // @@protoc_insertion_point(field_list:instance.Data.Graph.nodes)
  return nodes_;
}

// repeated int32 score = 4;
inline int Data_Graph::_internal_score_size() const {
  return score_.size();
}
inline int Data_Graph::score_size() const {
  return _internal_score_size();
}
inline void Data_Graph::clear_score() {
  score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Data_Graph::_internal_score(int index) const {
  return score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Data_Graph::score(int index) const {
  // @@protoc_insertion_point(field_get:instance.Data.Graph.score)
  return _internal_score(index);
}
inline void Data_Graph::set_score(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  score_.Set(index, value);
  // @@protoc_insertion_point(field_set:instance.Data.Graph.score)
}
inline void Data_Graph::_internal_add_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  score_.Add(value);
}
inline void Data_Graph::add_score(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_score(value);
  // @@protoc_insertion_point(field_add:instance.Data.Graph.score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Data_Graph::_internal_score() const {
  return score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Data_Graph::score() const {
  // @@protoc_insertion_point(field_list:instance.Data.Graph.score)
  return _internal_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Data_Graph::_internal_mutable_score() {
  return &score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Data_Graph::mutable_score() {
  // @@protoc_insertion_point(field_mutable_list:instance.Data.Graph.score)
  return _internal_mutable_score();
}

// -------------------------------------------------------------------

// Data

// repeated .instance.Data.Graph graph = 5;
inline int Data::_internal_graph_size() const {
  return graph_.size();
}
inline int Data::graph_size() const {
  return _internal_graph_size();
}
inline void Data::clear_graph() {
  graph_.Clear();
}
inline ::instance::Data_Graph* Data::mutable_graph(int index) {
  // @@protoc_insertion_point(field_mutable:instance.Data.graph)
  return graph_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph >*
Data::mutable_graph() {
  // @@protoc_insertion_point(field_mutable_list:instance.Data.graph)
  return &graph_;
}
inline const ::instance::Data_Graph& Data::_internal_graph(int index) const {
  return graph_.Get(index);
}
inline const ::instance::Data_Graph& Data::graph(int index) const {
  // @@protoc_insertion_point(field_get:instance.Data.graph)
  return _internal_graph(index);
}
inline ::instance::Data_Graph* Data::_internal_add_graph() {
  return graph_.Add();
}
inline ::instance::Data_Graph* Data::add_graph() {
  // @@protoc_insertion_point(field_add:instance.Data.graph)
  return _internal_add_graph();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::instance::Data_Graph >&
Data::graph() const {
  // @@protoc_insertion_point(field_list:instance.Data.graph)
  return graph_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace instance

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_graph_2eproto
